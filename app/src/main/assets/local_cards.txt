229 / _______ equality refers to two references to one object on the heap. / Reference / None /null
97 / _______ is to a thread what a job is to a worker.  / Runnable  / None /null
230 / ________ equality refers to two references to two objects on the heap, but the objects are meaningfully equivalent. / Object / None /null
51 / ________ is a dynamically resizing array which  grows as you insert elements.  / ArrayList / None /null
24 / _________ converts from primitives to wrapper objects automatically. / autoboxing / None /null
23 / A checked exception is, more sppecifically, a _________ checked exception.  / compiler / None /null
82 / A file that holds flattened objects is ________.  / serialized / None /null
142 / A final class means you can't ______ the class. / extend / None /null
69 / A final method means you can't _____ the method.  / override / None /null
204 / A final variable means you can't ______ its value. / change / None /null
201 / A final variable must be initialized in one of two places. What are they? / 1) At the time you declare it. 2) In a static initializer / None /null
114 / A Java class that can pass more than one is-a tests, is ____________. / polymorphic / Java   /null
61 / A thread's job is an instance of something that implements _________. / the runnable interface / None /null
38 / A vector is similar to a (an) _______ except it is synchronized.  / ArrayList / None /null
137 / All static variables in a class are initialized before any ____ of the class can be created.  / objects / None /null
188 / An abstract class can't be _______. / instantiated / None /null
158 / An abstract method has no _______. / body. ex: public abstract void eat(); / None /null
12 / An abstract method must be _______ to be used.  / overridden / None /null
111 / An instance variable lives as long as the ________ does.  / Object / None /null
129 / An interface is a 100% ________ class.  / abstract / None /null
207 / Any class that doesn't explicityly extend another class, implicityly extends class _________. / Object / None /null
95 / Area of memory where local varialbes and method invocations live. / stack / None /null
21 / By creating a new ______ object, you create a new call stack. / Thread / None /null
139 / Can a final class be subclassed?  /  / None /null
192 / Can a non-static method access a static variable? / Yes, it can access a static method too. / None /null
190 / Can a static method access a non-static variable? / No / None /null
140 / Can I mark just one mothod in my class final if I don't want it to be overridden? / Yes / None /null
193 / Can static and non-static methods be combined together in one class? / Yes, but even a single non-static method means there needs to be a way to make an instance of the class.  / None /null
194 / Can the final keyword be used to modify non-static variables? / Yes / None /null
170 / Can you put code between try and catch? / No / None /null
74 / Can you use an inner class in an outer class from a different inheritance tree? / Yes, with an interface.  / None /null
4 / Compiler determines which methods you can call based on the ______, not the ______.  / reference, object / None /null
25 / Convert String "6" into an int. / int numSix = Integer.parseInt("6"); / None /null
117 / Create a (an) _______ when you want to define a template for a group of subclasses. / Abstract class / None /null
9 / Create a (an) ________ when you want to define a role that other clsses can play regardless of tree position.  / interface / None /null
235 / Describe the activity lifecycle /  / Android /null
146 / Do abstract classes have constructors? / Yes / None /null
218 / Do static variables get serialized? / No, static means one per class, not one per object. It will be saved with the variables current value.  / None /null
155 / Does a subclass have to override a superclass? / No, if the subclass doesn't require anything unique, it can just use the superclass members as they are.  / None /null
65 / Does the finally block get executed if we put a return in the try block? / Yes, finally block is run. / None /null
123 / Does this work? Animal a = new Dog(); a.bark(); / No. Compiler uses reference type, not object type. Do this instead: Animal a = new Dog(); Dog d = (Dog) a; d.bark; / None /null
110 / For efficiency, chain FileWriter to _______.  / BufferedWriter / None /null
48 / Foundations of object oriented programming / 1) Encapsulation, 2) Inheritance ,3) Polymorphism, 4) Abstraction  / None /null
200 / Give an example of methods that are typically static.  / Utility methods. / None /null
119 / HashMap needs how many type parameters? / 2 (key, value) / None /null
115 / HashMap uses _____ instead of add(). / put(); / None /null
34 / Having more than one constructor in a clas means you have ______ constructors.  / overloaded / None /null
16 / How can you recognize a wrapper class? / Each is named after the primitive type, but with the first letter in CAPS.  / None /null
196 / How do you access a static variable? / Using the class name: Player.playerCount / None /null
195 / How do you call a static method? / Using the class name: Math.min(x,y); / None /null
30 / How do you create a new thread? / Thread t = new Thread(); t.start(); / None /null
31 / How do you designate a variable as a constant? / public static final (also, name should be in all CAPS) / None /null
156 / How do you duck an exception? / declare it / None /null
15 / How do you invoke an abstract class (like Calendar)? / Calendar cal = Calendar.getInstance(); / None /null
55 / How do you make your object thread-safe? / Decide which statements should be treates as oen atomic process. Use the synchronized keyword for those.  / None /null
107 / How is an ArrayList sorted? / Items are sorted in the order they were inserted. / None /null
83 / How many inner classes can a class have? / As many as it wants.  / None /null
68 / How to see the difference between the method and a constructor.  / A method has a return type, a constructor doesn't. / None /null
87 / How would you implement a method more than once in a class? / Using inner classes. / None /null
77 / If an object's reference dies, will an object die too? / Yes .  / None /null
197 / If you have a class with only static methods and you don't want the class to be instantiated, what should you do? / mark the constructor private / None /null
169 / If you have multiple catch blocks, order them from _______ to _______.  / smallest, largest / None /null
92 / If you make a constructor with arguments, will the compiler make a no arg constructor? / No, compiler will only add a constructor if you don't add any at all. / None /null
127 / If you override equals(), you must override hashCode(). / TRUE / None /null
79 / If you pass a ______ to the sort() method, the sort order is determined by the comparator, not the element's compareTo() method.  / comparator / None /null
125 / If you use the dot operator on a null reference, you get a ________. / NullPointerException / None /null
39 / If your class might evolve, add a ______ to the class.  / serial version id / None /null
147 / Implementing an abstract method is just like ______ a method. / overriding / None /null
222 / In Collections, use _____ when finding something by key matters.  / map / None /null
202 / In Collections, use _______ when sequence matters.  / list / None /null
203 / In Collections, use _______ when uniqueness matters. / set / None /null
40 / In terms of inheritance, what's the effect of keeping a constructor private?  / The class can be inherited, but only by its own or its parents inner classes.  / None /null
132 / Instance variables live on the _______. Local variables live on the ______.  / heap, stack / None /null
120 / Instance variables live within the object they belong to, on the ______. / heap / None /null
205 / List 3 things that can prevent a class from being subclassed. / 1) Non-public class, 2) Final keyword modifier, 3) Class has only private constructors. / None /null
226 / List four classes that implement Map. / HashTable, HashMap, LinkedHashMap, TreeMap (via SortedMap) / None /null
85 / List the primitive data types. / boolean, int, float, short, byte, long, char, double  / None /null
27 / List these primitive data types in order from smallest to largest; long, byte, int, short / byte (8), short(16), int(32), long(64) / None /null
228 / List three classes that implement Collections list / ArrayList, LinkedList, Vector / None /null
227 / List three classes that implement Collections set. / HashSet, LinkedHashSet, TreeSet (via SortedSet) / None /null
43 / Make a ______ only when you need a more specific version of a class.  / Subclass / None /null
72 / Name three ways to get rid of an object's reference.  / 1) Reference goes out of scope (method ends), 2) Reference is assigned to another object, 3) Reference is explicityly set to null. / None /null
221 / Non-runtime exceptions are called ______ exceptions. / checked / None /null
166 / Objects have state and behavior, represented by ________ and _______. / instance variables, methods / None /null
96 / Once a thread becomes runnable, it can move among 3 states. What are they? / Runnable, running, blocked / None /null
66 / public static final double PI = 3.1415; Explain what this is. / public - any code can access it. static - don't need an instance of Math to run it. final - can't be changed. This is a constant. / None /null
150 / Static final variables are _________. / constants / None /null
62 / The ________ passed into the event handler method carries info about the event, including the source of the event.  / event object / None /null
99 / The 1st concrete class in a tree must implement ________ abstract methods.  / all / None /null
168 / The assignment operator is represented by what symbol? / "=" / None /null
152 / The constructor runs ____ the object reference is assigned.  / before / None /null
41 / The listener is where the ______ is declared.  / call-back method / None /null
36 / The most common generified type is_______.  / ArrayList / None /null
50 / The two times errors can be caught are _______ and _________. / Compile time and run time.  / None /null
67 / The way to invoke a _____ is with keyword "new" followed by the class name.  / constructor / None /null
100 / Think of a static variable as one that lives in a ________ rather than an object. / class / None /null
102 / Threads running on the same object can lead to ________ issues, which can lead to race conditions.  / concurrency / None /null
80 / To define an interface, replace "interface" for _________.  / class / None /null
11 / To listen for an event, you need to ________ your listener with the event source.  / register / None /null
78 / To serialzie an object, you call ______ on the ObjectOutputStream.  / writeObject(object); / None /null
3 / To treat a primitive like an object, you can _________.  / Wrap it / None /test more dialog
144 / True or False: A final class is at the end of the inheritance line and can't be extended.  / TRUE / None /null
136 / True or False: A static method can be invoked without any instacne of the method's class on the heap. / TRUE / None /null
13 / True or False: A thread's job can be defined in any class that extends Runnable. / False, Runnable is an interface. True if it said Implements.  / None /null
159 / True or False: A try must be followed by etither a catch or a finally. / TRUE / None /null
161 / True or False: Another good option beyond using a Runnable is just subclassing Thread. / False - it is an option, but not good design. Should only subclass if you need a more specific version of the thread.  / None /null
172 / True or False: Declaring a superclass of an exception allows you to throw subclass exceptions.  / True - for example, declaring the ClothingException let's you throw the PantsException, ShirtException. / None /null
105 / True or False: Each element in a map has either a key or a value / False, each element has both a key and a value.  / None /null
103 / True or False: Every class has a constructor. / TRUE / None /null
104 / True or False: For TreeSets, both of these meust be true: 1) elements must be a type implementing comparable. 2) you use TreeSet's overloaded constructor that takes a comparator. / False, only one of these must happen. / None /null
183 / True or False: If a class I need isn't serializable, I can subclass it and make *that* serializable. / TRUE / None /null
122 / True or False: If two objects are equal, they must have matching hashcodes. / TRUE / None /null
58 / True or False: If you do Thread.sleep(2000); after 2s your thread will return to running state. / False, it will be runnable, but it won't be running unless selected by the thread scheduler.  / None /null
86 / True or False: If you have a class that doesn't implement a comparable, you can still put things in order by creating a comparator.  / TRUE / None /null
225 / True or False: In Collections list, you can have more than one element reference the same object.  / TRUE / None /null
224 / True or False: In Collections set, you can have more than one element referencing the same object.  / FALSE / None /null
93 / True or False: Interfaces are always public. / TRUE / None /null
178 / True or False: LinkedLists don't provide constant access to a particular index. Need to iterate through "k" elements to find the kth element. / TRUE / None /null
54 / True or False: Method parameters are considered local variables.  / TRUE / None /null
53 / True or False: No other threads can enter any of the object's synchronized methods while a thread is holding the key. / TRUE / None /null
6 / True or False: Only one thread can have an active call stack at a given time.  / TRUE / None /null
81 / True or False: Only the constructor from the current class runs when you make a new object.  / False, all constructors in the inheritance tree run.  / None /null
91 / True or False: Runtime exceptions are checked by the compiler / False, these are unchecked exceptions.  / None /null
29 / True or False: Static method behavior isn't dependent on an instance variable. / TRUE / None /null
191 / True or False: Static methods don't use instance variables. / TRUE / None /null
126 / True or False: Static nested classes can only access other private static members of the outer class, not the non-static members. / TRUE / None /null
90 / True or False: There are ways to control the thread scheduler.  / False  / None /null
135 / True or False: There are ways to control the thread scheduler.  / FALSE / None /null
108 / True or False: Two objects with the same hashcode values aren;t required to be equal, but if they're equal, they must have the same hashcode value.  / TRUE / None /null
33 / True or False: Type parameters don't have to be defined in the class declaration.  / True, they can also be defined before the method return type.  / None /null
101 / True or False: Unlike instance variables, static variables don't get default values.  / False, they get the source default values.  / None /null
223 / True or False: When using Collections map, you can have two keys that reference the same value, but can't have duplicate keys.  / TRUE / None /null
182 / True or False: With a wildcard, you can invoke methods on the elements in the list, but you can't add elements to the list. / TRUE / None /null
112 / True or False: You can have duplicate values and duplicated keys. / False, no duplicate keys. / None /null
128 / True or False: You can use this(); to call a constructor from another overloaded constructor in a different class.  / False, same class.  / None /null
138 / True or False: You can't call a non-static method from a static method. / TRUE / None /null
149 / True or False: You can't have an abstract method in a concrete class.  / TRUE / None /null
98 / True or False: You can't have polymorphic arguments or return types.  / False, you can.  / None /null
153 / True or False: You can't implement more than one interface.  / False - You can extend only one class, but can implement multiple interfaces.  / None /null
1 / True or False: You must be careful using sleep(), it will cause an InterruptedException, an unchecked exception / False - it is a checked exception / None /null
42 / Two things you need to make a socket connection are _______ and _______.  / 1) Who it is, 2) What port they're on / None /null
133 / Use _____ to see if two different objects are equal.  / equals() / None /null
60 / Use the _______ keyword to ensure that only one thread at a time can access a method.  / synchronized / None /null
14 / Use the keyword ______ to make your method associalted with an exception.  / throws / None /null
131 / Use the String _____ method to separate parts of a string. / split(); / None /null
37 / Variables must always be declared with a _______ and a _____. / name, type / None /null
187 / What are generics? /  / None /null
163 / What are LinkedLists? /  / None /null
57 / What are literals? /  / None /null
17 / What are parameterized types?  / A way to force the compiler to only accept specific type of object.  / None /Parameterized types are represented by <>
7 / What are primitives?  /  / None /null
160 / What are some things that cause a thread to be blocked ? / *Sleeping *Waiting for another thread to finish *Waiting for stream data *Waiting for an object's  lock / None /null
64 / What are the benefits of inheritance? / 1) Avoid duplicate code, 2) control - define a common protocol for a group of classes.  / None /null
84 / What are the steps for deserialization? / 1) Make FileInputStream, 2) Make ObjectInputStream, 3) Cast the objects, 4) Close the ObjectInputStream / None /null
88 / What are the steps to serialize an object to file? / 1) Make FileOUtputStream, 2) Make ObjectOutputStream, 3) Write the object, 4) Close the ObjectOutputStream.  / None /null
19 / What are the three steps for making an object?  / 1) Declare a reference variable 2) Create object 3) Assign object to the reference  / None /null
174 / What are the two types of variables? / primitive, reference / None /null
10 / What are the ways to deal with exceptions? / handle or declare them / None /null
157 / What are thread priorities?  / Numerical values that tell the thread scheduler how important a thread is to you. Note: can't depend on these 100% of the time.  / None /null
44 / What class do you need to write to a string?  / FileWriter / None /null
130 / What classes do you use to deserialize? / FlieInputStream and ObjectInputStream / None /null
220 / What command do you use to leave a loop early? / break; / None /null
186 / What does <> represent? / generics / None /null
45 / What does a BufferedWriter do? / It is like a shopping cart. It provides a temporary holding place and will have the FileWriter write only once it is full.  / None /null
151 / What does a getter do? / It sends back, as a return value, the value (usually of an instance variable) / None /null
164 / What does a listener do? / It listens for a call back.  / None /null
56 / What does atomic mean? / Making something indivisible. ex: you can make a method atomic by adding the synchronized keyword.  / None /null
106 / What does final mean when applied to a reference variable? / The variable can't point to any other object on the heap. / None /null
109 / What does iDE stand for?  / Integrated Development Environment / Android /null
206 / What does marking an instance variable "transient" do?  / It says skip this variable during serialization. / None /null
185 / What does serializable mean? / Saveable thorugh the serialization mechanism / None /null